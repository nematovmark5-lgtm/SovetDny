// Полные данные из JSON файлов
const programmingQuotes = [
    {
        "category": "Философия программирования",
        "quotes": [
            {
                "quote": "Программирование сегодня — это гонка разработчиков программ, стремящихся писать программы с большей и лучшей идиотоустойчивостью, и вселенной, которая пытается создать больше отборных идиотов. Пока вселенная побеждает.",
                "author": "Rick Cook"
            },
            {
                "quote": "Программирование — это разбиение чего-то большого и невозможного на что-то маленькое и вполне реальное.",
                "author": "Jazzwant"
            },
            {
                "quote": "Программирование — это как бить себя по лицу, рано или поздно ваш нос будет кровоточить.",
                "author": "Kyle Woodbury"
            },
            {
                "quote": "Есть два способа создания дизайна программы. Один из них, это сделать его настолько простым, что в нем, очевидно, не будет недостатков. Другой способ — сделать его настолько запутанным, что в нем не будет очевидных недостатков.",
                "author": "C.A.R. Hoare"
            },
            {
                "quote": "В компьютерной науке все проблемы могут быть решены с помощью дополнительного уровня косвенности.",
                "author": "Дэвид Уилер"
            },
            {
                "quote": "Но как правило это создаёт другую проблему.",
                "author": "Дэвид Уилер"
            },
            {
                "quote": "Программирование — это сложно. Основные правила, на которых все строится, очень просты, но по мере разработки программа сама начинает вводить свои правила и законы.",
                "author": "Marijn Haverbeke"
            },
            {
                "quote": "Мы наблюдаем общество, которое все больше зависит от машин, но при этом использует их все неэффективнее.",
                "author": "Douglas Rushkoff"
            },
            {
                "quote": "Программы должны писаться для людей, которые будут их читать, а машины, которые будут эти программы исполнять — второстепенны.",
                "author": "Harold Abelson"
            },
            {
                "quote": "Люди, которые думают, что ненавидят компьютеры, на самом деле ненавидят плохих программистов.",
                "author": "Larry Niven"
            }
        ]
    },
    {
        "category": "Качество кода и простота",
        "quotes": [
            {
                "quote": "Простота — залог надежности.",
                "author": "Edsger W. Dijkstra"
            },
            {
                "quote": "Болтовня ничего не стоит. Покажите мне код.",
                "author": "Linus Torvalds"
            },
            {
                "quote": "Любой дурак сможет написать код, который поймет машина. Хорошие программисты пишут код, который сможет понять человек.",
                "author": "Martin Fowler"
            },
            {
                "quote": "Всегда пишите код так, будто сопровождать его будет склонный к насилию психопат, который знанет, где вы живете.",
                "author": "Martin Golding"
            },
            {
                "quote": "Отладка кода вдвое сложнее, чем его написание. Так что если вы пишете код настолько умно, насколько можете, то вы по определению недостаточно сообразительны, чтобы его отлаживать.",
                "author": "Brian W. Kernighan"
            },
            {
                "quote": "Не повторяйтесь. Каждый элемент знаний внутри системы должен иметь единственное, чётко выраженное и авторитетное выражение.",
                "author": "Энди Хант и Дейв Томас"
            },
            {
                "quote": "Сначала учите науку программирования и всю теорию. Далее выработайте свой программистский стиль. Затем забудьте всё и просто программируйте.",
                "author": "George Carrette"
            },
            {
                "quote": "Если вы хотите, чтобы код было легко и быстро писать — делайте его удобным для чтения.",
                "author": "Robert C. Martin"
            },
            {
                "quote": "Чтобы написать чистый код, мы сначала пишем грязный код, а затем рефакторим его.",
                "author": "Robert Martin"
            },
            {
                "quote": "Если мы посчитаем количество строк кода, то стоит рассматривать их не как «произведённые строки», а как «строки потраченные».",
                "author": "Edsger W. Dijkstra"
            }
        ]
    },
    {
        "category": "Процесс разработки",
        "quotes": [
            {
                "quote": "Измерять продуктивность программирования подсчетом строк кода — это так же, как оценивать постройку самолета по его весу.",
                "author": "Bill Gates"
            },
            {
                "quote": "Ходить по воде и разрабатывать программы, следуя спецификации, очень просто… если они заморожены.",
                "author": "Edward V Berard"
            },
            {
                "quote": "В теории, теория и практика неразделимы. На практике это не так.",
                "author": "Yoggi Berra"
            },
            {
                "quote": "Иногда лучше остаться спать дома в понедельник, чем провести всю неделю отлаживая написанный в понедельник код.",
                "author": "Christopher Thompson"
            },
            {
                "quote": "Опасайтесь багов в приведенном выше коде; я только доказал корректность, но не запускал его.",
                "author": "Donald E. Knuth"
            },
            {
                "quote": "Преждевременная оптимизация — корень всех зол.",
                "author": "Donald Knuth"
            },
            {
                "quote": "Для каждой сложной задачи существует решение, которое является быстрым, простым и неправильным.",
                "author": "H. L. Mencken"
            },
            {
                "quote": "Некоторые люди во время решения некой проблемы думают: «Почему бы мне не использовать регулярные выражения?». После этого у них уже две проблемы.",
                "author": "Jamie Zawinski"
            },
            {
                "quote": "Работает? Не трогай.",
                "author": "Любой программист"
            },
            {
                "quote": "Иногда лучшие программы создаются на бумажке. Запрограммировать их — второстепенная вещь.",
                "author": "Max Kanat-Alexander"
            }
        ]
    }
];

const motivationalQuotes = [
    {
        "category": "Успех и достижения",
        "quotes": [
            {
                "quote": "Успех — это способность идти от одной неудачи к другой, не теряя энтузиазма.",
                "author": "Уинстон Черчилль"
            },
            {
                "quote": "Если вы хотите добиться успеха, должны пойти на риск. Вы не сможете оказаться на втором базе, не отрывая ноги от первой.",
                "author": "Фредрик Уилкокс"
            },
            {
                "quote": "Успех не в том, что вы имеете, а в том, кто вы есть.",
                "author": "Бо Беннет"
            },
            {
                "quote": "Успех — это лестница, на которую не взобраться, держа руки в карманах.",
                "author": "Зиг Зиглар"
            },
            {
                "quote": "Чтобы добиться успеха, нужно отдаваться делу с такой страстью, которую другие считают безумием.",
                "author": "Говард Шульц"
            },
            {
                "quote": "Успех — это не окончательная точка, неудача — не фатальна: значение имеет мужество продолжать.",
                "author": "Уинстон Черчилль"
            },
            {
                "quote": "Успех приходит к тем, кто слишком занят его поисками, чтобы его искать.",
                "author": "Генри Дэвид Торо"
            },
            {
                "quote": "Не стремитесь к успеху — просто делайте то, что любите и во что верите, и успех придет сам.",
                "author": "Дайана Росс"
            },
            {
                "quote": "Успех — это сумма небольших усилий, повторяемых изо дня в день.",
                "author": "Роберт Кольер"
            },
            {
                "quote": "Успех — это движение от неудачи к неудаче без потери энтузиазма.",
                "author": "Уинстон Черчилль"
            }
        ]
    },
    {
        "category": "Цели и мечты",
        "quotes": [
            {
                "quote": "Ставьте перед собой высокие цели и не останавливайтесь, пока не достигнете их.",
                "author": "Бо Джексон"
            },
            {
                "quote": "Будущее принадлежит тем, кто верит в красоту своей мечты.",
                "author": "Элеонора Рузвельт"
            },
            {
                "quote": "Мечты не работают, пока не работаешь ты.",
                "author": "Стивен Кови"
            },
            {
                "quote": "Все наши мечты могут сбыться, если у нас хватит смелости следовать за ними.",
                "author": "Уолт Дисней"
            },
            {
                "quote": "Не бойтесь мечтать о великом, ибо великие мечты порождают великих людей.",
                "author": "Бенджамин Мэйс"
            },
            {
                "quote": "Цель — это мечта с дедлайном.",
                "author": "Наполеон Хилл"
            },
            {
                "quote": "Если вы можете это мечтать, вы можете это сделать.",
                "author": "Уолт Дисней"
            },
            {
                "quote": "Человек растет по мере того, как растут его цели.",
                "author": "Фридрих Шиллер"
            },
            {
                "quote": "Ставьте перед собой невозможные цели — так вы достигнете большего.",
                "author": "Джон Ф. Кеннеди"
            },
            {
                "quote": "Мечтайте так, как будто будете жить вечно. Живите так, как будто умрете сегодня.",
                "author": "Джеймс Дин"
            }
        ]
    }
];

const programmingAdvice = [
    {
        "category": "Карьерный рост",
        "advices": [
            "Выберите правильный первый язык программирования. Java хорош для строгой типизации, Python для простого синтаксиса, JavaScript для веб-разработки",
            "Начните со стажерской позиции, даже тестировщиком, чтобы войти в профессию и понять процессы изнутри",
            "Не замыкайтесь только на технических знаниях - учитесь понимать бизнес-потребности заказчика",
            "Определите свой путь: быстро освоить одну область или стать универсальным специалистом с фундаментальными знаниями",
            "Стремитесь работать в лучших компаниях и сообществах с самого начала карьеры",
            "Создайте портфолио на GitHub с разнообразными проектами",
            "Постоянно учитесь новому, даже если это не требуется на текущей работе",
            "Проявляйте инициативу - предлагайте улучшения, автоматизируйте процессы, делитесь знаниями",
            "Определите свои сильные и слабые стороны для целенаправленного развития",
            "Помните, что основная задача программиста - создавать ценность, а не просто писать код"
        ]
    },
    {
        "category": "Технические навыки",
        "advices": [
            "Освойте основы алгоритмов и структур данных - это фундамент программирования",
            "Изучите паттерны проектирования: Singleton, Factory, Observer, Strategy",
            "Изучайте математику - она развивает логическое мышление и нужна для сложных задач",
            "Используйте системы контроля версий (Git) с самого начала",
            "Изучите основы Linux, командной строки и сетей",
            "Освойте работу с базами данных - SQL запросы, проектирование схем, оптимизацию",
            "Научитесь писать код с нуля, а не только модифицировать существующий",
            "Изучайте принципы безопасности программирования",
            "Практикуйте TDD (Test-Driven Development)",
            "Изучайте новые языки программирования с разными моделями вычислений",
            "Создайте свой компилятор, игрушечную ОС, HTTP-сервер для глубокого понимания",
            "Участвуйте в open-source проектах",
            "Используйте правило 80/20 - сосредоточьтесь на самом важном функционале",
            "Сначала создавайте минимальный рабочий продукт (MVP), затем улучшайте",
            "Принципы SOLID должны стать основой вашего программирования"
        ]
    },
    {
        "category": "Личностное развитие",
        "advices": [
            "Улучшайте коммуникативные навыки - умение общаться критически важно",
            "Развивайте аналитическое мышление - умение разбивать сложные задачи на части",
            "Будьте внимательны к деталям - одна ошибка может сломать всю систему",
            "Развивайте логическое мышление для создания эффективных алгоритмов",
            "Будьте гибкими и адаптивными - технологии быстро меняются",
            "Проявляйте креативность для нестандартных решений",
            "Будьте терпеливы и настойчивы - редко все работает с первого раза",
            "Будьте ответственны - ваш код может иметь серьезные последствия",
            "Будьте организованы - планируйте, расставляйте приоритеты, ведите документацию",
            "Стремитесь к совершенству - постоянно учитесь",
            "Развивайте навыки командной работы",
            "Освойте тайм-менеджмент - умение работать с дедлайнами",
            "Развивайте стрессоустойчивость",
            "Научитесь задавать правильные вопросы",
            "Используйте технику 'резиновой уточки' для решения проблем"
        ]
    }
];

const factsAboutProgrammers = [
    {
        "category": "Исторические факты и происхождение терминов",
        "items": [
            {
                "fact": "Первым в мире программистом была женщина — англичанка Ада Лавлейс. В середине XIX века она составила план операций для прообраза современной ЭВМ — аналитической машины Чарльза Бэббиджа."
            },
            {
                "fact": "Термин «баг» (ошибка) использовал ещё Томас Эдисон для описания проблем со своими изобретениями. Популярная история о мотыльке, найденном в реле компьютера Грейс Хоппер в 1947 году, сделала термин широко известным, но не была его первоисточником."
            },
            {
                "fact": "Среди шести ведущих программистов первого электронного компьютера общего назначения ЭНИАК не было ни одного мужчины."
            },
            {
                "fact": "В 1962 году космический аппарат «Маринер-1» потерпел аварию из-за ошибки в коде: в одном из уравнений была пропущена чёрточка. Журналисты окрестили её «самым дорогим дефисом в истории», а стоимость утерянного аппарата сегодня составила бы 135 миллионов долларов."
            },
            {
                "fact": "В 1980-х годах программы для компьютеров ZX Spectrum часто «скачивали», записывая на аудиокассету с звука в специальных радиопередачах или вручную вводя исходный код из журналов."
            }
        ]
    },
    {
        "category": "Языки программирования и технологии",
        "items": [
            {
                "fact": "В мире существует около 8500 языков программирования, но популярны из них чуть больше десятка."
            },
            {
                "fact": "Язык программирования Python назван не в честь змеи, а в честь британского комедийного сериала «Летающий цирк Монти Пайтона»."
            },
            {
                "fact": "Язык программирования Ада назван в честь Ады Лавлейс. Чуть позже был создан язык для параллельных вычислений «Линда», названный в честь порноактрисы Линды Лавлейс."
            },
            {
                "fact": "Автор программы компьютерной вёрстки TeX Дональд Кнут ввел необычную систему версий: после третьей версии номер выпуска приближается к числу π (например, версия 3.141592653). После его смерти версия должна быть зафиксирована как TeX π."
            }
        ]
    },
    {
        "category": "Профессия и карьера",
        "items": [
            {
                "fact": "Профессия программиста входит в десятку самых востребованных в мире. Ожидается, что к 2030 году будет открыто более 45 миллионов IT-вакансий по всему миру."
            },
            {
                "fact": "Многие программисты имеют возможность работать удалённо или по гибридной модели, что позволяет им работать с компаниями из разных уголков мира."
            },
            {
                "fact": "Программисты отмечают свой профессиональный праздник в 256-й день года (12 или 13 сентября). Число 256 выбрано потому, что это количество чисел, которые можно выразить с помощью восьмиразрядного байта, и максимальная степень числа 2, которая меньше 365."
            },
            {
                "fact": "Самый молодой программист в мире — Архам Ом Талсания из Индии, который освоил Python и получил сертификат Microsoft в 6 лет."
            },
            {
                "fact": "Больше всего программистов живёт в Китае (около 7 миллионов), на втором месте — Индия (почти 5 миллионов)."
            },
            {
                "fact": "99% всех программистов — это мужчины, и лишь 1% составляют женщины."
            }
        ]
    }
];